<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.code.baseservice.dao.ZfAgentRecordDao">

    <resultMap type="com.code.baseservice.entity.ZfAgentRecord" id="ZfAgentRecordMap">
        <result property="agentId" column="agent_id" />
<!--        <result property="recordDate" column="record_date" />-->
<!--        <result property="rechargeTimes" column="recharge_times" />-->
<!--        <result property="rechargeAmount" column="recharge_amount" />-->
<!--        <result property="withdrawTimes" column="withdraw_times" />-->
<!--        <result property="withdrawAmount" column="withdraw_amount" />-->
        <result property="income" column="income" />
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ZfAgentRecordMap">
        select
          agent_id, record_date, recharge_times, recharge_amount, withdraw_times, withdraw_amount, income
        from zf_agent_record
        where agent_id = #{agentId}
    </select>

    <!--查询单个-->
    <select id="queryByIdAndRecord" resultMap="ZfAgentRecordMap">
        select
          agent_id, record_date, recharge_times, recharge_amount, withdraw_times, withdraw_amount, income
        from zf_agent_record
        where agent_id = #{agentId}
        and record_date = #{recordDate}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ZfAgentRecordMap">
        select
          agent_id, record_date, recharge_times, recharge_amount, withdraw_times, withdraw_amount, income
        from zf_agent_record
        <where>
            <if test="agentId != null">
                and agent_id = #{agentId}
            </if>
            <if test="recordDate != null">
                and record_date = #{recordDate}
            </if>
            <if test="rechargeTimes != null">
                and recharge_times = #{rechargeTimes}
            </if>
            <if test="rechargeAmount != null">
                and recharge_amount = #{rechargeAmount}
            </if>
            <if test="withdrawTimes != null">
                and withdraw_times = #{withdrawTimes}
            </if>
            <if test="withdrawAmount != null">
                and withdraw_amount = #{withdrawAmount}
            </if>
            <if test="income != null">
                and income = #{income}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from zf_agent_record
        where agent_id = #{agentId}
        and record_date = #{recordDate}
    </select>


    <insert id="insert" keyProperty="agentId" useGeneratedKeys="true">
        insert into zf_agent_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="agentId != null">agent_id,</if>
            <if test="recordDate != null">record_date,</if>
            <if test="rechargeTimes != null">recharge_times,</if>
            <if test="rechargeAmount != null">recharge_amount,</if>
            <if test="withdrawTimes != null">withdraw_times,</if>
            <if test="withdrawAmount != null">withdraw_amount,</if>
            <if test="income != null">income,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="agentId != null">#{agentId},</if>
            <if test="recordDate != null">#{recordDate},</if>
            <if test="rechargeTimes != null">#{rechargeTimes},</if>
            <if test="rechargeAmount != null">#{rechargeAmount},</if>
            <if test="withdrawTimes != null">#{withdrawTimes},</if>
            <if test="withdrawAmount != null">#{withdrawAmount},</if>
            <if test="income != null">#{income},</if>
        </trim>
    </insert>


    <insert id="insertBatch" keyProperty="agentId" useGeneratedKeys="true">
        insert into zf_agent_record(recharge_times, recharge_amount, withdraw_times, withdraw_amount, income)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.rechargeTimes}, #{entity.rechargeAmount}, #{entity.withdrawTimes}, #{entity.withdrawAmount}, #{entity.income})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="agentId" useGeneratedKeys="true">
        insert into zf_agent_record(recharge_times, recharge_amount, withdraw_times, withdraw_amount, income)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.rechargeTimes}, #{entity.rechargeAmount}, #{entity.withdrawTimes}, #{entity.withdrawAmount}, #{entity.income})
        </foreach>
        on duplicate key update
        recharge_times = values(recharge_times),
        recharge_amount = values(recharge_amount),
        withdraw_times = values(withdraw_times),
        withdraw_amount = values(withdraw_amount),
        income = values(income)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update zf_agent_record
        <set>
            <if test="rechargeTimes != null">
                recharge_times =recharge_times+ #{rechargeTimes},
            </if>
            <if test="rechargeAmount != null">
                recharge_amount = recharge_amount + #{rechargeAmount},
            </if>
            <if test="withdrawTimes != null">
                withdraw_times = withdraw_times + #{withdrawTimes},
            </if>
            <if test="withdrawAmount != null">
                withdraw_amount = withdraw_amount + #{withdrawAmount},
            </if>
            <if test="income != null">
                income = income + #{income},
            </if>
        </set>
        where agent_id = #{agentId}
        and record_date = #{recordDate}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from zf_agent_record where agent_id = #{agentId}
    </delete>

</mapper>

